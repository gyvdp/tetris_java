variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"


stages:
  - build
  - test
  - package

cache:
  paths:
    - .m2/repository/

before_script:
  - 'mvn $MAVEN_CLI_OPTS clean'

build:
  image: maven:3-$JAVA_VERSION-slim
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS compile'
  parallel:
    matrix:
      - JAVA_VERSION: [ 'openjdk-16', 'openjdk-17' ]

test:
  image: maven:3-$JAVA_VERSION-slim
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  artifacts:
    when: always
    reports:
      junit:
        - src/**/target/surefire-reports/TEST-*.xml
        - src/**/target/failsafe-reports/TEST-*.xml
  parallel:
    matrix:
      - JAVA_VERSION: [ 'openjdk-16', 'openjdk-17' ]

package:
  image: maven:3-$JAVA_VERSION-slim
  stage: package
  script:
    - 'mvn $MAVEN_CLI_OPTS package'
  artifacts:
    paths:
      - src/**/target/*.jar
  parallel:
    matrix:
      - JAVA_VERSION: [ 'openjdk-16', 'openjdk-17' ]
